<!DOCTYPE html>
<html>
  <head>
    <title>趣圖</title>
    <link
      rel="stylesheet"
      href="https://unpkg.com/element-ui/lib/theme-chalk/index.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.8/semantic.css"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/css/lightbox.min.css"
    />
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <style>
        .el-tag + .el-tag {
          margin-left: 10px;
        }
        .button-new-tag {
          margin-left: 10px;
          height: 32px;
          line-height: 30px;
          padding-top: 0;
          padding-bottom: 0;
        }
        .input-new-tag {
          width: 90px;
          margin-left: 10px;
          vertical-align: bottom;
        }
    </style> 
  </head>
  <body>
    <div id="app" class="ui grid">
      <el-dialog title="提示" :visible.sync="dialogVisible" width="30%">
        <span>
          <el-tag
            :key="tag"
            v-for="tag in dynamicTags"
            closable
            :disable-transitions="false"
            @close="handleClose(tag)"
          >
            {{ tag }}
          </el-tag>
          <el-input
            class="input-new-tag"
            v-if="inputVisible"
            v-model="inputValue"
            ref="saveTagInput"
            size="small"
            @keyup.enter.native="handleInputConfirm"
            @blur="handleInputConfirm"
          >
          </el-input>
          <el-button v-else class="button-new-tag" size="small" @click="showInput">+ New Tag</el-button>
        </span>
        <span slot="footer" class="dialog-footer">
          <el-button @click="dialogVisible = false">取 消</el-button>
          <el-button type="primary" @click="updatePic"
            >確 定</el-button
          >
        </span>
      </el-dialog>
      <el-row :gutter="0">
        <el-col :md="6" :sm="8" v-for="pic in pics">
          <el-card :body-style="{ padding: '0px' }" style="height: 350px;">
            <div class="image-box" style="height:200px">
              <a v-bind:href="pic.imgurObject.link" data-lightbox="roadtrip">
                <img
                  class="image"
                  v-bind:src="pic.imgurObject.link"
                  alt=""
                  loading="auto"
                />
              </a>
            </div>
            <div style="padding: 14px;">
              <span>
                <el-tag v-for="tag in pic.tags">{{ tag }}</el-tag>
              </span>
              <div class="bottom clearfix" style="padding: 10px">
                <el-button
                  type="primary"
                  icon="el-icon-edit"
                  circle
                  v-on:click="editPic(pic)"
                ></el-button>
                <el-button
                  type="danger"
                  icon="el-icon-delete"
                  circle
                  v-on:click="deletePic(pic._id)"
                ></el-button>
              </div>
            </div>
          </el-card>
        </el-col>
      </el-row>
    </div>
    <!-- import Vue before Element -->
    <script src="https://unpkg.com/vue/dist/vue.js"></script>
    <!-- import JavaScript -->
    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.8/semantic.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/js/lightbox.min.js"></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/jquery-tagsinput/1.3.6/jquery.tagsinput.min.js"
      integrity="sha256-IkytFcY/Z/rLvRE9rYyZvybaitAWr1y2jS/+eyxXky8="
      crossorigin="anonymous"
    ></script>
    <script>
      const app = new Vue({
        el: "#app",
        data() {
          return {
            dynamicTags:[],
            selectPic:'',
            pics: [],
            dialogVisible: false,
            inputVisible: false,
            inputValue: ''
          };
        },
        created() {
          this.getPics();
        },
        methods: {
          getPics(){
              axios.get("/api/pics").then(res => {
              this.pics = res.data;
            });
          },
          editPic(pic) {
            this.dialogVisible = true;
            this.selectPic = pic
            this.dynamicTags = [...pic.tags];
          },
          updatePic(){
            this.selectPic.tags = this.dynamicTags;
            axios.put(`/api/pics/${this.selectPic._id}`,this.selectPic).then(res => {
                  this.getPics();
                  this.$message({
                    type: "success",
                    message: "編輯成功!"
                  });
                  this.dialogVisible = false
            });
          },
          deletePic(id) {
            this.$confirm("此動作將刪除該照片", "提示", {
              confirmButtonText: "確定",
              cancelButtonText: "取消",
              type: "warning"
            })
              .then(() => {
                axios.delete(`/api/pics/${id}`).then(res => {
                  this.getPics();
                  this.$message({
                    type: "success",
                    message: "刪除成功!"
                  });
                });
              })
              .catch(() => {
                this.$message({
                  type: "info",
                  message: "已取消"
                });
              });
          },
          handleClose(tag) {
            this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);
          },
          showInput() {
            this.inputVisible = true;
            this.$nextTick(_ => {
              this.$refs.saveTagInput.$refs.input.focus();
            });
          },
          handleInputConfirm() {
            let inputValue = this.inputValue;
            if (inputValue) {
              if(new Set([...this.dynamicTags,inputValue]).size===this.dynamicTags.length){
                this.$message.error('重複標籤');
              }else{
                this.dynamicTags.push(inputValue);
                this.inputVisible = false;
                this.inputValue = '';
              }      
            }else{
              this.inputVisible = false;
              this.inputValue = '';
            }
          }
        }
      });
    </script>
  </body>
</html>
